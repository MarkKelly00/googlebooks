{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\achac\\\\code\\\\googlebooks\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\achac\\\\code\\\\googlebooks\\\\client\\\\src\\\\pages\\\\Books.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1]; // Loads all books and sets them to books\n\n\n  function handleBookSearch(event) {\n    event.preventDefault();\n    var book = event.target.search.value;\n    API.searchBooks(book).then(res => {\n      console.log(res.data);\n      setBooks(res.data.items);\n    }).catch(err => console.log(err));\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    lg: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Google Book Search\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleBookSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: () => {},\n    name: \"search\",\n    placeholder: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    onClick: () => {},\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: true,\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, books.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, books.map(book => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: book.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/books/\" + book._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: book.volumeInfo.imageLinks.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, book.volumeInfo.title, \" by \", book.volumeInfo.authors)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }\n    }, book.volumeInfo.description), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        API.saveBook({\n          title: book.volumeInfo.title,\n          author: book.volumeInfo.authors,\n          description: book.volumeInfo.description,\n          image: book.volumeInfo.imageLinks.thumbnail,\n          link: book.selfLink\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }, \"Save\"));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/achac/code/googlebooks/client/src/pages/Books.js"],"names":["React","useEffect","useState","Jumbotron","DeleteBtn","API","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Books","books","setBooks","handleBookSearch","event","preventDefault","book","target","search","value","searchBooks","then","res","console","log","data","items","catch","err","length","map","id","_id","volumeInfo","imageLinks","thumbnail","title","authors","description","saveBook","author","image","link","selfLink"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\n\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nfunction Books() {\r\n  // Setting our component's initial state\r\n  const [books, setBooks] = useState([])\r\n\r\n\r\n\r\n  // Loads all books and sets them to books\r\n  function handleBookSearch(event) {\r\n    event.preventDefault();\r\n    const book = event.target.search.value;\r\n\r\n    API.searchBooks(book)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        setBooks(res.data.items)\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n    return (\r\n      <Container lg>\r\n        <Row >\r\n            <Jumbotron >\r\n              <h1>Google Book Search</h1>\r\n            </Jumbotron>\r\n            <form onSubmit={handleBookSearch}>\r\n              <Input\r\n                onChange={() => {}}\r\n                name=\"search\"\r\n                placeholder=\"Search\"\r\n              />\r\n              <FormBtn\r\n                onClick={() => {}}\r\n                type=\"submit\"\r\n              >\r\n                Search\r\n              </FormBtn>\r\n            </form>\r\n            </Row>\r\n            <Row>\r\n          <Col lg size=\"md-6 sm-12\">\r\n            {books.length ? (\r\n              <List>\r\n                {books.map(book => {\r\n                  return (\r\n                    <ListItem key={book.id}>\r\n                      <a href={\"/books/\" + book._id}>\r\n                      <img src={book.volumeInfo.imageLinks.thumbnail} />\r\n                      <br />\r\n                        <strong>\r\n                          {book.volumeInfo.title} by {book.volumeInfo.authors}\r\n                        </strong>\r\n                      </a>\r\n                      <p>\r\n                        {book.volumeInfo.description}\r\n                      </p>\r\n                      <button onClick={() => {\r\n                        API.saveBook({\r\n                          title: book.volumeInfo.title,\r\n                          author: book.volumeInfo.authors,\r\n                          description: book.volumeInfo.description,\r\n                          image: book.volumeInfo.imageLinks.thumbnail,\r\n                          link: book.selfLink,\r\n                        })\r\n                      }}>\r\n                        Save\r\n                      </button>\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n\r\nexport default Books;\r\n"]},"metadata":{},"sourceType":"module"}